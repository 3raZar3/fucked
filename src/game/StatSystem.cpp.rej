diff a/src/game/StatSystem.cpp b/src/game/StatSystem.cpp	(rejected hunks)
@@ -875,9 +875,7 @@ bool Pet::UpdateStats(Stats stat)
     Unit *owner = GetOwner();
     if ( stat == STAT_STAMINA )
     {
-        if(owner && owner->GetTypeId() == TYPEID_PLAYER  && owner->getClass() == CLASS_WARLOCK)
-            value += float(owner->GetStat(stat)) * 0.75f;
-        else if (owner)
+        if(owner)
             value += float(owner->GetStat(stat)) * 0.3f;
     }
                                                             //warlock's and mage's pets gain 30% of owner's intellect
@@ -958,22 +956,10 @@ void Pet::UpdateMaxHealth()
 {
     UnitMods unitMod = UNIT_MOD_HEALTH;
     float stamina = GetStat(STAT_STAMINA) - GetCreateStat(STAT_STAMINA);
-    float multiplicator;
-
-    // nesocips warlock pet stats calculation
-    switch(GetEntry())
-    {
-        case 416:   multiplicator = 8.4f;  break; // imp
-        case 1860:                                // voidwalker
-        case 17252: multiplicator = 11.0f; break; // felguard
-        case 1863:  multiplicator = 9.1f;  break; // succubus
-        case 417:   multiplicator = 9.5f;  break; // felhunter
-        default:    multiplicator = 10.0f; break;
-    }
 
     float value   = GetModifierValue(unitMod, BASE_VALUE) + GetCreateHealth();
     value  *= GetModifierValue(unitMod, BASE_PCT);
-    value  += GetModifierValue(unitMod, TOTAL_VALUE) + stamina * multiplicator;
+    value  += GetModifierValue(unitMod, TOTAL_VALUE) + stamina * 10.0f;
     value  *= GetModifierValue(unitMod, TOTAL_PCT);
 
     SetMaxHealth((uint32)value);
@@ -984,22 +970,10 @@ void Pet::UpdateMaxPower(Powers power)
     UnitMods unitMod = UnitMods(UNIT_MOD_POWER_START + power);
 
     float addValue = (power == POWER_MANA) ? GetStat(STAT_INTELLECT) - GetCreateStat(STAT_INTELLECT) : 0.0f;
-    float multiplicator;
-
-    // nesocips warlock pet stats calculation
-    switch(GetEntry())
-    {
-        case 416:   multiplicator = 4.95f; break; // imp
-        case 1860:                                // voidwalker
-        case 1863:                                // succubus
-        case 417:                                 // felhunter
-        case 17252: multiplicator = 11.5f; break; // felguard
-        default:    multiplicator = 15.0f; break;
-    }
 
     float value  = GetModifierValue(unitMod, BASE_VALUE) + GetCreatePowers(power);
     value *= GetModifierValue(unitMod, BASE_PCT);
-    value += GetModifierValue(unitMod, TOTAL_VALUE) + addValue * multiplicator;
+    value += GetModifierValue(unitMod, TOTAL_VALUE) +  addValue * 15.0f;
     value *= GetModifierValue(unitMod, TOTAL_PCT);
 
     SetMaxPower(power, uint32(value));
